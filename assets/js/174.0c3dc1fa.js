(window.webpackJsonp=window.webpackJsonp||[]).push([[174],{547:function(t,a,e){"use strict";e.r(a);var s=e(46),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"索引"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[t._v("#")]),t._v(" 索引")]),t._v(" "),e("p",[t._v("索引是帮助MySQL高效获取数据的一种数据结构")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/Iekrwh/md-images/raw/master/images/image-20210818145427611.png",alt:"image-20210818145427611"}})]),t._v(" "),e("h2",{attrs:{id:"索引操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#索引操作"}},[t._v("#")]),t._v(" 索引操作")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("创建索引")]),t._v(" "),e("ul",[e("li",[e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unique")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" fulltext"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v(" 索引名称  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--unique 唯一索引 ")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" 索引类型"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 默认为 btree")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" 表名"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("列名"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])])]),t._v(" "),e("li",[e("p",[t._v("查看索引  show index from 表名;")])]),t._v(" "),e("li",[e("p",[t._v("添加索引")]),t._v(" "),e("ul",[e("li",[t._v("普通索引: alter table 表名 add index 索引名称(列名);")]),t._v(" "),e("li",[t._v("组合索引: alter table 表名 add index 索引名称(列名,列名);")]),t._v(" "),e("li",[t._v("主键索引: alter table 表名 add primary key (主键列名);")]),t._v(" "),e("li",[t._v("外键索引: alter table 表名 add constraint 外键名 foreign key (外键列名) references 主表名(主键列名);")]),t._v(" "),e("li",[t._v("唯一索引: alter table 表名 add unique 索引名称(列名);")]),t._v(" "),e("li",[t._v("全文索引: alter table 表名 add fulltext 索引名称(列名);")])])]),t._v(" "),e("li",[e("p",[t._v("删除索引 drop index 索引名称 on 表名;")])])]),t._v(" "),e("h2",{attrs:{id:"原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[t._v("#")]),t._v(" 原理")]),t._v(" "),e("p",[t._v("索引是在存储引擎中实现的")]),t._v(" "),e("p",[t._v("BTree 索引类型是"),e("strong",[t._v("基于 B+Tree 数据结构的")]),t._v(" , 而B+Tree 是 Btree 的变种, 通常在数据库 和 系统中的文件系统中 特点是能够 保持数据稳定有序")]),t._v(" "),e("h3",{attrs:{id:"_1-磁盘存储"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-磁盘存储"}},[t._v("#")]),t._v(" 1. 磁盘存储")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/Iekrwh/md-images/raw/master/images/image-20210818151304899.png",alt:"image-20210818151304899"}})]),t._v(" "),e("h3",{attrs:{id:"_2-btree"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-btree"}},[t._v("#")]),t._v(" 2. BTree")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/Iekrwh/md-images/raw/master/images/image-20210818151520468.png",alt:"image-20210818151520468"}})]),t._v(" "),e("p",[t._v("由于每次读取到一个磁盘块中的数据 深度 导致效率低")]),t._v(" "),e("p",[t._v("每个节点中包含key值 和 数据 会增加查询时 磁盘IO 次数")]),t._v(" "),e("h3",{attrs:{id:"_3-b-tree"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-b-tree"}},[t._v("#")]),t._v(" 3. B+Tree")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/Iekrwh/md-images/raw/master/images/image-20210818151828345.png",alt:"image-20210818151828345"}})]),t._v(" "),e("p",[t._v("数据只会保持在叶子节点上 并且叶子节点 之间指针相连 方便进行范围查询")]),t._v(" "),e("p",[t._v("非叶子节点只存储 key值  减少磁盘IO的次数 树形结构较小")]),t._v(" "),e("h2",{attrs:{id:"索引原则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#索引原则"}},[t._v("#")]),t._v(" 索引原则")]),t._v(" "),e("ol",[e("li",[t._v("对查询次数较高 并且数据量比较大的表 建立索引")]),t._v(" "),e("li",[t._v("建议使用唯一索引  区分度高 索引的效率高")]),t._v(" "),e("li",[t._v("索引字段的选择  应当从 where 子句的条件中提取")]),t._v(" "),e("li",[t._v("索引虽然提供效率  但过多不便于维护")]),t._v(" "),e("li",[t._v("最左匹配原则(只适合于组合索引)\n"),e("ul",[e("li",[t._v("当我们为表中 name age height 添加组合索引  实质上建立了 name 列索引  (name、age) 索引  （name、age、height）索引   使用这三个索引时不区分顺序")])])])])])}),[],!1,null,null,null);a.default=r.exports}}]);