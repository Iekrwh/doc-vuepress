(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{467:function(t,v,_){"use strict";_.r(v);var e=_(46),p=Object(e.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"抽象类与接口的区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#抽象类与接口的区别"}},[t._v("#")]),t._v(" 抽象类与接口的区别")]),t._v(" "),_("p",[t._v("成员区别:")]),t._v(" "),_("p",[t._v("抽象类   变量,常量;有构造方法;有抽象方法;也有非抽象方法")]),t._v(" "),_("p",[t._v("接口 常量;抽象方法")]),t._v(" "),_("p",[t._v("关系区别:")]),t._v(" "),_("p",[t._v("类与类   继承,单继承")]),t._v(" "),_("p",[t._v("类与接口 实现,可单实现,也可多实现")]),t._v(" "),_("p",[t._v("接口与接口 继承,单继承,多继承")]),t._v(" "),_("p",[t._v("设计理念区别:")]),t._v(" "),_("p",[t._v("抽象类  对类抽象,包括属性、行为")]),t._v(" "),_("p",[t._v("接口 对行为抽象，主要是行为")]),t._v(" "),_("p",[t._v("抽象类是对事物的抽象,而接口是对行为的抽象")])])}),[],!1,null,null,null);v.default=p.exports}}]);