(window.webpackJsonp=window.webpackJsonp||[]).push([[167],{541:function(s,t,a){"use strict";a.r(t);var e=a(46),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"mysql-存储过程和函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql-存储过程和函数"}},[s._v("#")]),s._v(" MySQL 存储过程和函数")]),s._v(" "),a("p",[s._v("相对应函数/方法，存储函数必须有返回值，存储过程可以没有返回值")]),s._v(" "),a("h2",{attrs:{id:"存储过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储过程"}},[s._v("#")]),s._v(" 存储过程")]),s._v(" "),a("p",[s._v("存储过程可以没有返回值")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 修改结束分隔符这里指定为$ 可以自定义")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("delimiter")]),s._v(" $\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 创建存储过程")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("procedure")]),s._v(" 存储过程名称"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("参数列表"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("可为空"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("begin")]),s._v("\n                        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sql")]),s._v(" 语句"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("$\n                        \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 恢复结束分割符为分号")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("delimiter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n           \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 调用存储过程")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("call")]),s._v(" 存储过程名称"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("参数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("ul",[a("li",[a("p",[s._v("查询数据中所有的存储 过程   必须是root权限用户")]),s._v(" "),a("ul",[a("li",[a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" mysql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("proc")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" db"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'数据库名称'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])])])]),s._v(" "),a("li",[a("p",[s._v("删除存储过程")]),s._v(" "),a("ul",[a("li",[a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("drop")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("procedure")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("exists")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" 存储过程名称"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])])])])]),s._v(" "),a("h3",{attrs:{id:"变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[s._v("#")]),s._v(" 变量")]),s._v(" "),a("ul",[a("li",[s._v("定义变量 declare 变量名 数据类型 [default 默认值];")]),s._v(" "),a("li",[s._v("赋值 set 变量名 = 值;")]),s._v(" "),a("li",[s._v("赋值2 select 列名 into 变量名 from 表名 [where 条件];")])]),s._v(" "),a("h3",{attrs:{id:"if语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#if语句"}},[s._v("#")]),s._v(" if语句")]),s._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("if 判断条件1 then sql语句;\nelseif 判断条件2 then sql语句;\nelse sql语句;\nend if;\n")])])]),a("h3",{attrs:{id:"传参"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#传参"}},[s._v("#")]),s._v(" 传参")]),s._v(" "),a("ul",[a("li",[s._v("IN   默认值 输入参数关键字 由调用者传递实参")]),s._v(" "),a("li",[s._v("OUT  输出参数,作为返回值返回")]),s._v(" "),a("li",[s._v("INOUT  即可以为输入也可以为输出")])]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("procedure")]),s._v(" 存储过程名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("IN")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("OUT")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INOUT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" 参数名 数据类型"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BEGIN")]),s._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SQL")]),s._v(" 语句"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("END")]),s._v("$\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 调用")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("call")]),s._v(" 存储过程名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("@输出参数名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 查询返回值")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" @输出参数名\n")])])]),a("h3",{attrs:{id:"while-循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#while-循环"}},[s._v("#")]),s._v(" while 循环")]),s._v(" "),a("div",{staticClass:"language-SQL extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" 判断语句 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n\t循环体语句"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h2",{attrs:{id:"存储函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储函数"}},[s._v("#")]),s._v(" 存储函数")]),s._v(" "),a("p",[s._v("存储函数必须要有返回值 即有out参数")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("delimiter")]),s._v(" $\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" 函数名称"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("参数列表"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("returns")]),s._v(" 返回值类型\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("begin")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sql")]),s._v("语句"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" 返回值"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("$\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("delimiter")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 调用")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" 函数名称"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("实际参数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n")])])]),a("ul",[a("li",[s._v("删除函数  drop function 函数名;")])])])}),[],!1,null,null,null);t.default=n.exports}}]);