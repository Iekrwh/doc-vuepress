(window.webpackJsonp=window.webpackJsonp||[]).push([[225],{597:function(t,a,s){"use strict";s.r(a);var n=s(46),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"numpy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#numpy"}},[t._v("#")]),t._v(" Numpy")]),t._v(" "),s("p",[t._v("开源的python科学计算库 用于快速处理任意维度的数组 npmpy中存储对象是ndarray")]),t._v(" "),s("p",[t._v("优势:")]),t._v(" "),s("ol",[s("li",[t._v("内容块风格")]),t._v(" "),s("li",[t._v("支持并行化运算")]),t._v(" "),s("li",[t._v("效率高于纯python")]),t._v(" "),s("li",[t._v("底层使用了C,内部释放了GIL")])]),t._v(" "),s("ul",[s("li",[t._v("np.array([])        创建np数组   返回ndarray对象")])]),t._v(" "),s("h2",{attrs:{id:"读取数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#读取数据"}},[t._v("#")]),t._v(" 读取数据")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("np"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("genfromtxt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("delimiter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("dtype"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 从txt中读取数据")]),t._v("\n")])])]),s("h2",{attrs:{id:"数组转ndarray"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组转ndarray"}},[t._v("#")]),t._v(" 数组转ndarray")]),t._v(" "),s("p",[t._v("将数组或者多维数组转为np数组")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("np"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("arryay"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nndarray "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" np"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("arryay"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[t._v("列表中元素会自动转换为同一类 一般全部统一为一个类型")]),t._v(" "),s("li",[t._v("每个元素内 元素数必须相同")])]),t._v(" "),s("h2",{attrs:{id:"ndarray数组方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ndarray数组方法"}},[t._v("#")]),t._v(" ndarray数组方法")]),t._v(" "),s("ul",[s("li",[t._v("ndarray.shape 数组维度和维度元素个数的元组")]),t._v(" "),s("li",[t._v("ndarray.ndim  数组维数")]),t._v(" "),s("li",[t._v("ndarray.size  数组中全部的元素数量")]),t._v(" "),s("li",[t._v("ndarray.itemsize  一个数组元素的长度(字节)")]),t._v(" "),s("li",[t._v("ndarray.floor()  将数组中元素向上取整")]),t._v(" "),s("li",[t._v("ndarray.dtype  数组元素的类型\n"),s("ul",[s("li",[s("img",{attrs:{src:"https://gitee.com/Iekrwh/md-images/raw/master/images/image-20211102163311444.png",alt:"image-20211102163311444"}})])])])]),t._v(" "),s("h2",{attrs:{id:"ndarray数组生成方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ndarray数组生成方法"}},[t._v("#")]),t._v(" ndarray数组生成方法")]),t._v(" "),s("ul",[s("li",[t._v("np.arange(15,30,5)    创建等差数组 生成一个np数组从15到30  步进为5个  默认为1维")]),t._v(" "),s("li",[t._v("p.logspace(start,stop, num)   创建等比数列   默认生成50个num   p.logspace(0,2, 3)   从10的0次方到10的2次方 生成3个元素 默认为50个")]),t._v(" "),s("li",[t._v("np.zeros((3,4))  生成一个全为0的np数组 3行4列")]),t._v(" "),s("li",[t._v("np.zeros_like(a, dtype)   复制当前数组的维度和行列数 生成一个全为0的数组")]),t._v(" "),s("li",[t._v("np.ones((2,3,4), dtype=np.int32)  生成全为一的数组 二维三行4列  默认为float64类型 zeros也是")]),t._v(" "),s("li",[t._v("np.ones_like(a, dtype)   复制当前数组的维度和行列数 生成一个全为1的数组")]),t._v(" "),s("li",[t._v("np.random.random((2,3))  多少个random就是多维  生成一个两行三列的数组  取值为(-1,1)")]),t._v(" "),s("li",[t._v("np.linspace(0,5,100)  生成一个0-5 之间平均取100个值")])]),t._v(" "),s("h2",{attrs:{id:"数组的索引和切片"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组的索引和切片"}},[t._v("#")]),t._v(" 数组的索引和切片")]),t._v(" "),s("ul",[s("li",[t._v("ndarray[s,r]  根据维度和索引 获取值")]),t._v(" "),s("li",[t._v("ndarray[0:]  支持切片")])]),t._v(" "),s("h2",{attrs:{id:"形状修改"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#形状修改"}},[t._v("#")]),t._v(" 形状修改")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("ndarray.reshape(shape, order) 将原数组 转为为指定的行列")]),t._v(" "),s("ul",[s("li",[s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("stock_change "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" np"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("random"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("normal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nstock_change"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reshape"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#将行列互换了  reshape方法并不会修改元素的个数和产生新的元素")]),t._v("\nstock_change"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reshape"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果不知道具体的行或列可以使用-1代替 自动计算   如这里的 不知道多少行 每个行2个数据")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#一定要整除 否则报错")]),t._v("\n")])])])])])]),t._v(" "),s("li",[s("p",[t._v("ndarray.resize(new_shape)   reshape并不会对原数组进行修改 而产生新数组  我们使用resize可以对原数组进行修改")])]),t._v(" "),s("li",[s("p",[t._v("ndarray.revel()   将数组变成一维 将全部元素存放为数组中")])]),t._v(" "),s("li",[s("p",[t._v("ndarray.T   将数组的行、列进行互换")])])]),t._v(" "),s("h2",{attrs:{id:"数组拼接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组拼接"}},[t._v("#")]),t._v(" 数组拼接")]),t._v(" "),s("ul",[s("li",[t._v("np.hstack((a,b))  将两数组相连接")]),t._v(" "),s("li",[t._v("np.vstack((a,b))  将两数组纵向拼接")])]),t._v(" "),s("h2",{attrs:{id:"数组切分"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组切分"}},[t._v("#")]),t._v(" 数组切分")]),t._v(" "),s("ul",[s("li",[t._v("np.hshplit(a,3)  将指定数组平均拆分成3个np数组  行的拆分 列数不变")]),t._v(" "),s("li",[t._v("np.hshplit(a,(3,4))   如果传递元组则在指定索引下 拆分 在第3列拆分1个  在第4列拆分1个  其他拆分为1个")]),t._v(" "),s("li",[t._v("np.vshplit(a,3)   列拆分 行不变")]),t._v(" "),s("li",[t._v("np.hshplit(a,(3,4))   在指定列数拆分")])]),t._v(" "),s("h2",{attrs:{id:"类型修改"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型修改"}},[t._v("#")]),t._v(" 类型修改")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("ndarray.astype(flaot)  转换元素类型")]),t._v(" "),s("ul",[s("li",[s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("df"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'金牌数'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" df"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'金牌数'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fillna"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("astype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#先替换缺失值")]),t._v("\n")])])])])])]),t._v(" "),s("li",[s("p",[t._v("ndarray.tostring([order])  转为字符串输出")])]),t._v(" "),s("li",[s("p",[t._v("ndarray.tobytes([order])  转为字节数组")])])]),t._v(" "),s("h2",{attrs:{id:"复制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复制"}},[t._v("#")]),t._v(" 复制")]),t._v(" "),s("ul",[s("li",[t._v("np.array(object, dtype)  将数组转为np数组   深拷贝")]),t._v(" "),s("li",[t._v("np.asarray(a, dtype)    浅拷贝")]),t._v(" "),s("li",[t._v("ndarray.copy()  浅拷贝")]),t._v(" "),s("li",[t._v("ndarray.view()   深拷贝")])]),t._v(" "),s("h2",{attrs:{id:"数组的去重"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组的去重"}},[t._v("#")]),t._v(" 数组的去重")]),t._v(" "),s("ul",[s("li",[t._v("np.unique()   去重")])]),t._v(" "),s("h2",{attrs:{id:"数组运算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组运算"}},[t._v("#")]),t._v(" 数组运算")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("np数组支持两个np数组 之间运算  同时支持与常数运算")]),t._v(" "),s("ul",[s("li",[s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" np"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" np"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#数组在进行矢量化运算时，要求数组的形状是相等的。当形状不相等的数组执行算术运算的时候，就会出现广播机制，该机制会对数组进行扩展，使数组的shape属性值一样，这样，就可以进行矢量化运算了。")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [21,32,43,50]")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [19,29,39,49]")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [40,60,80,100]")]),t._v("\n")])])])])])]),t._v(" "),s("li",[s("p",[t._v("ndarray  == 10   支持 > = <比较运算符  返回为同样维度的布尔数组")]),t._v(" "),s("ul",[s("li",[s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" np"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("arryay"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nt "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("na"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#因为返回是布尔数组 所以可以根据索引获取具体值")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("na"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])])]),t._v(" "),s("li",[s("p",[t._v("支持 逻辑运算")]),t._v(" "),s("ul",[s("li",[s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" np"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("arryay"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nt "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])])]),t._v(" "),s("li",[s("p",[t._v("np.exp()  平方")])]),t._v(" "),s("li",[s("p",[t._v("np.sqrt()  开根号")])]),t._v(" "),s("li",[s("p",[t._v("np.tile(a,(2,2))  将行数和列数扩展为指定倍数   传递数组和一个元组")])])]),t._v(" "),s("h3",{attrs:{id:"判断函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#判断函数"}},[t._v("#")]),t._v(" 判断函数")]),t._v(" "),s("ul",[s("li",[t._v("np.all()  所有元素都符合条件则返回true   np.all(arry >60 )")]),t._v(" "),s("li",[t._v("np.any()  有一个符合则返回true")]),t._v(" "),s("li",[t._v("np.where(temp > 60, 1, 0)    三元运算符  成立返回参数2 否则返回参数3")]),t._v(" "),s("li",[t._v("ndarray.argmax(axis=)  返回最大值的索引")])]),t._v(" "),s("h2",{attrs:{id:"排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#排序"}},[t._v("#")]),t._v(" 排序")]),t._v(" "),s("ul",[s("li",[t._v("ndarray.sort(axis=)   排序默认为升序")]),t._v(" "),s("li",[t._v("ndarray.argsort(axis=)   按元素排序 返回元素之前的索引")])]),t._v(" "),s("h3",{attrs:{id:"统计运算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#统计运算"}},[t._v("#")]),t._v(" 统计运算")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("ndarray.min(axis)   获取最小值")])]),t._v(" "),s("li",[s("p",[t._v("ndarray.max(axis)   获取最大值")])]),t._v(" "),s("li",[s("p",[t._v("ndarray.sum(axis=1)   求和  axis=1则为行求和   axis=0为列切换")])]),t._v(" "),s("li",[s("p",[t._v("ndarray.median(axis)  返回中位值")])]),t._v(" "),s("li",[s("p",[t._v("ndarray.mean(axis,dtype)   返回平均值")])]),t._v(" "),s("li",[s("p",[t._v("ndarray.std(axis,dtype)   返回标准差")])]),t._v(" "),s("li",[s("p",[t._v("ndarray.var(axis,dtype)  返回方差")])])]),t._v(" "),s("h2",{attrs:{id:"正态分布"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正态分布"}},[t._v("#")]),t._v(" 正态分布")]),t._v(" "),s("p",[t._v("正态分布是一种概率分布。正态分布是具有两个参数μ和σ的连续型随机变量的分布，第一参数μ是服从正态分布的随机变量的均值，第二个参\n数σ是此随机变量的标准差，所以正态分布记作N(μ，σ )。")]),t._v(" "),s("h2",{attrs:{id:"矩阵"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#矩阵"}},[t._v("#")]),t._v(" 矩阵")]),t._v(" "),s("p",[t._v("矩阵必须是二维的 但array可以是多维的")]),t._v(" "),s("p",[t._v("$$\nA= \\left{ \\begin{matrix} a & b & c & d & e\\ f & g & h & i & j \\ k & l & m & n & o \\ p & q & r & s & t \\end{matrix} \\right}\n$$")]),t._v(" "),s("h3",{attrs:{id:"向量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#向量"}},[t._v("#")]),t._v(" 向量")]),t._v(" "),s("p",[t._v("向量是一种特殊的矩阵 向量一般都是列向量")]),t._v(" "),s("p",[t._v("如: (3x1)的矩阵")]),t._v(" "),s("p",[t._v("向量是一维的")]),t._v(" "),s("h3",{attrs:{id:"加法和标量乘法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#加法和标量乘法"}},[t._v("#")]),t._v(" 加法和标量乘法")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("加法:行列数相等时可以相加")])]),t._v(" "),s("li",[s("p",[t._v("乘法: 标(常)量 乘以 矩阵  直接相乘 按原来位置")])]),t._v(" "),s("li",[s("p",[t._v("矩阵向量乘法:  "),s("strong",[t._v("(M行,N列) X (N行,L列) = (M行,L列)")]),t._v("\n并且 N列和N行相等")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"imags/image-20210909210108515.png",alt:"image-20210909210108515"}})]),t._v(" "),s("ul",[s("li",[t._v("矩阵乘法:"),s("img",{attrs:{src:"https://gitee.com/Iekrwh/md-images/raw/master/images/image-20211020083948346.png",alt:"image-20211020083948346"}})])]),t._v(" "),s("p",[t._v("即A的第一行 各个数 都乘以B的第一列各个数 相加 得到 C的第一行第一个数")]),t._v(" "),s("p",[t._v("​\t\t第一行 各个数 都乘以B的第二列各个数 相加 得到 C的第一行第二个数")]),t._v(" "),s("h3",{attrs:{id:"矩阵乘法的性质"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#矩阵乘法的性质"}},[t._v("#")]),t._v(" 矩阵乘法的性质")]),t._v(" "),s("ul",[s("li",[t._v("矩阵乘法不满足交换律 A*B != B*A")]),t._v(" "),s("li",[t._v("矩阵的乘法满足结合律: A*(B*C)=(A*B)*C")]),t._v(" "),s("li",[t._v("单位矩阵:在矩阵乘法中 有一种特殊矩阵 称为单位矩阵 它是个方针 一般用 I 或者 E表示 从左上角到右下角的对角线(称为主对角线) 上的元素均为为1 其他全为0   "),s("strong",[t._v("如果A*B=E 那么矩阵A和B互为逆矩阵")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/Iekrwh/md-images/raw/master/images/image-20211020091909782.png",alt:"image-20211020091909782"}})]),t._v(" "),s("h3",{attrs:{id:"逆、转置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#逆、转置"}},[t._v("#")]),t._v(" 逆、转置")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("待定系数法")])])]),t._v(" "),s("p",[t._v("给予一个2X2的矩阵 我们假设一个同样为2X2的矩阵  [a b] [b c]")]),t._v(" "),s("p",[t._v("A B矩阵相乘 转为单位矩阵")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://exp-picture.cdn.bcebos.com/732a12e265e7340f322d9e9735b9763e20c2b4e9.jpg?x-bce-process=image%2Fresize%2Cm_lfit%2Cw_500%2Climit_1%2Fquality%2Cq_80",alt:"3阶以内的矩阵求逆矩阵的3种手算方法"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://exp-picture.cdn.bcebos.com/bff8683e21c2bbd6bd85e75c116186254093aee9.jpg?x-bce-process=image%2Fresize%2Cm_lfit%2Cw_500%2Climit_1%2Fquality%2Cq_80",alt:"3阶以内的矩阵求逆矩阵的3种手算方法"}})]),t._v(" "),s("p",[t._v("求出 a b c d 的值 ,就可以得出 A的逆矩阵")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://exp-picture.cdn.bcebos.com/40d2d0e8b004541bb55a7892869a310e1699a6e9.jpg?x-bce-process=image%2Fresize%2Cm_lfit%2Cw_500%2Climit_1%2Fquality%2Cq_80",alt:"3阶以内的矩阵求逆矩阵的3种手算方法"}})]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[s("strong",[t._v("伴随矩阵求逆矩阵")])])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("伴随矩阵")]),t._v("是矩阵元素所对应的代数余子式，所构成的矩阵，转置后得到的新矩阵。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://exp-picture.cdn.bcebos.com/0cdb2f0e1799e92ad0edc8f4e1fec314f0c5a0e9.jpg?x-bce-process=image%2Fresize%2Cm_lfit%2Cw_500%2Climit_1%2Fquality%2Cq_80",alt:"3阶以内的矩阵求逆矩阵的3种手算方法"}})]),t._v(" "),s("p",[t._v("原矩阵为 [1 2]")]),t._v(" "),s("p",[t._v("​\t\t\t\t[-1 -3]")]),t._v(" "),s("p",[t._v("A11 为 第一行和第一列的元素 都去掉剩下 -3  又因为A11为 1+1=2 为偶数是整数 1*-3=-3  A11=-3")]),t._v(" "),s("p",[t._v("A12 为 第一行和第二列的元素 都去掉剩下 -1  又因为A12为 1+2=3 为奇数 所以为负号 A12=-(-1)=1")]),t._v(" "),s("p",[t._v("A21 为 第二行和第一列的元素 都去掉剩下 2  2+1为奇数 A21=-(2)=-2")]),t._v(" "),s("p",[t._v("A22 为 第二行和第二列的元素 都去掉剩下 1 为偶数 A22=1")]),t._v(" "),s("p",[t._v("得出[-3 1] 的矩阵  进行转置即行列变换第一行内容变成第一列内容 变成  [-3 -2]")]),t._v(" "),s("p",[t._v("​\t\t[-2 1]\t\t\t\t\t\t\t\t\t\t\t\t  第二行内容变成第二列内容\t\t  [1 1]")]),t._v(" "),s("p",[t._v("接下来求出矩阵A的行列式")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("行列式")])])]),t._v(" "),s("p",[t._v("二阶行列式的计算方法是“对角线法则”  主对角线元素积与副对角线元素积的差")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/Iekrwh/md-images/raw/master/images/10412061-9b3ab92a521563f6.png",alt:"img"}})]),t._v(" "),s("p",[t._v("二阶行列式并不适合三阶使用")]),t._v(" "),s("p",[t._v("正对角线为正，反对角线为负。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/Iekrwh/md-images/raw/master/images/10412061-0e083241c114d81d.png",alt:"img"}})]),t._v(" "),s("p",[t._v("xsc  +  yt*a + ra* z  - zsa - yr*c - tb* x")]),t._v(" "),s("p",[t._v("由行列号性质得出")]),t._v(" "),s("p",[t._v("|A|1*(-1)-(-1)*2=-1")]),t._v(" "),s("p",[s("code",[t._v("A⁻¹=A*/|A| = A*/(-1)=-A*")]),t._v(" = [3 2]")]),t._v(" "),s("p",[t._v("​\t\t\t\t\t\t\t\t\t\t\t\t\t\t[-1 -1]")]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[s("strong",[t._v("初等变换求逆矩阵")])])]),t._v(" "),s("p",[t._v("首先我们得出A的增广矩阵")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://exp-picture.cdn.bcebos.com/5e9a2820b93acd89a190acbb0335dd8a58de8be9.jpg?x-bce-process=image%2Fresize%2Cm_lfit%2Cw_500%2Climit_1%2Fquality%2Cq_80",alt:"3阶以内的矩阵求逆矩阵的3种手算方法"}})]),t._v(" "),s("p",[t._v("然后进行初等行变换。依次进行")]),t._v(" "),s("p",[t._v("第1行加到第2行，得到")]),t._v(" "),s("p",[t._v("第2行×2加到第1行，得到")]),t._v(" "),s("p",[t._v("第2行×(-1)，得到")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://exp-picture.cdn.bcebos.com/589f5b07880138705c14b0382d08a50f95fc83e9.jpg?x-bce-process=image%2Fresize%2Cm_lfit%2Cw_500%2Climit_1%2Fquality%2Cq_80",alt:"3阶以内的矩阵求逆矩阵的3种手算方法"}})]),t._v(" "),s("p",[t._v("因此逆矩阵A⁻¹=")]),t._v(" "),s("p",[t._v("3 2")]),t._v(" "),s("p",[t._v("-1 -1")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://exp-picture.cdn.bcebos.com/95bd4e8c9bcec7f81b22d769034ce54a2e27fbe9.jpg?x-bce-process=image%2Fresize%2Cm_lfit%2Cw_500%2Climit_1%2Fquality%2Cq_80",alt:"3阶以内的矩阵求逆矩阵的3种手算方法"}})]),t._v(" "),s("h4",{attrs:{id:"转置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#转置"}},[t._v("#")]),t._v(" 转置")]),t._v(" "),s("p",[t._v("即将矩阵的行列互换")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/Iekrwh/md-images/raw/master/images/image-20211020162004357.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"np方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#np方法"}},[t._v("#")]),t._v(" np方法")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("np.matmul()")]),t._v(" "),s("ul",[s("li",[s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" np"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("86")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("82")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("85")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("78")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n             "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("86")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("82")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("82")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 是的多行2列的矩阵")]),t._v("\nb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" np"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 两行一列的矩阵")]),t._v("\nnp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("matmul"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 转为M行L列 即多行一列")]),t._v("\n")])])])])])]),t._v(" "),s("li",[s("p",[t._v("np.dot()")]),t._v(" "),s("ul",[s("li",[s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#np.matmul(a, 10) #只支持矩阵相乘")]),t._v("\nnp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dot"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# matmul和dot功能一致 但dot支持点乘  标量运算 matmul不支持点乘")]),t._v("\n")])])])])])])])])}),[],!1,null,null,null);a.default=r.exports}}]);